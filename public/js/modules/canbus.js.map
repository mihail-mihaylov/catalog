{"version":3,"sources":["canbus.js"],"names":[],"mappingsfile":"canbus.js","sourcesContent":["var mapper = undefined;\nwindow.onload = function () {\n    var parseErrorsToForm = function (errors) {\n        // Remove error class from input fields\n        $('.form-control').removeClass('error');\n\n        $('.validation_errors').html('');\n\n        // Create alert with error messages\n        var div = $(document.createElement('div'));\n        div.addClass('alert alert-danger alert-dismissable col-md-12');\n        div.html('<button aria-hidden=\"true\" data-dismiss=\"alert\" class=\"close\" type=\"button\">Ã—</button>');\n\n        // Loop errors\n        $.each(errors.responseJSON, function (key, value) {\n            // Replace names of the fields which are named with array format (.1 with [1]). Example: first_name.1 to first_name[1]\n            if (key.indexOf('.') !== -1) {\n                key = key.split('.').join('][');\n                key = key.replace(/\\./g, '][');\n                key = key.replace(']', '');\n                key += ']';\n            }\n\n            // Add error class to fields with mistake\n            $(\"input[name='\" + key + \"'], select[name='\" + key + \"'], textarea[name='\" + key + \"']\").addClass('error');\n            // Add error to alert\n            div.append('<div class=\"text-left\">' + value + '</div>');\n        });\n\n        $('.validation_errors').append(div);\n    }\n    var trackedObjectsList = $('#tracked_objects');\n    var trackedObjectsParameters = $('#can_bus_parameters');\n    var submitButton = $('#get_canbus_report');\n\n    trackedObjectsList.select2({\n        width: \"100%\",\n        language: {\n           \"noResults\": function(){\n               return translations.no_data;\n           }\n        }\n    });\n    trackedObjectsParameters.select2({\n        width: \"100%\",\n        language: {\n           \"noResults\": function(){\n               return translations.no_data;\n           }\n        }\n    });\n\n    $(document).delegate('#get_canbus_report', 'click', function (event) {\n    \tevent.preventDefault();\n\n    \tdata = $(\"#tracked_objects, #can_bus_parameters, #last_date, #periodInput, #hiddenLastDate\").serialize();\n\n    \trequester.post($(this).data('canbus'), null, data).then(\n    \t\tfunction (success) {\n\n                $('.form-control').removeClass('error');\n                $('.graphs').html('');\n                $('.validation_errors').html('');\n\n                var div_id = 'div_g';\n\n                $.each(success.reports, function (n, items) {\n                    var events = \"\";\n                    var graphLabel = items.reportName;\n                    var temp_translations = [];\n                    var temp_key = 0;\n\n                    $.each(items.data, function (m, item) {\n                        var graphPoint = item[n];\n\n                        // Skip points\n                        if (m > 0 && graphPoint == items.data[m-1][n] && (m != items.data.length - 1 && graphPoint == items.data[m+1][n])) {\n                            return true;\n                        }\n\n                        // Translations\n                        var key = n + '.' + graphPoint;\n                        if (translations[key] && ! temp_translations[key]) {\n                            temp_key ++;\n                            temp_translations[key] = temp_key;\n                            graphPoint = temp_key;\n                        } else if (translations[key]) {\n                            graphPoint = temp_translations[key];\n                        }\n\n                        events += new Date(moment(item['gps_utc_time']).format(\"YYYY/MM/DD HH:mm:ss\")) + \",\" + graphPoint + \",\"+ m +\"\\n\";\n                    });\n\n                    for (var x in temp_translations) {\n                        temp_translations[temp_translations[x]] = x;\n                    }\n\n                    $('.results').removeClass('hidden');\n\n                    if (items.data.length > 0) {\n                        // Append div for the current graph\n                        $('.graphs').append('<div id=\"' + div_id + '\"></div><br /><br />');\n\n                        var g = new Dygraph(document.getElementById(div_id),\n                            events,\n                            {\n                                title: graphLabel + (items.label ? ' (' + items.label + ')' : ''),\n                                visibility: [true, false],\n                                axes: {\n                                    x: {\n                                        axisLabelFormatter: function(x) {\n                                            return x.getFullYear() + '.' +\n                                                    (x.getMonth() + 1 < 10 ? '0' : '') + (x.getMonth() + 1)  + '.' +\n                                                    (x.getDate() < 10 ? '0' : '') + x.getDate() + ' ' +\n                                                    (x.getHours() < 10 ? '0' : '') + x.getHours() + ':' +\n                                                    (x.getMinutes() < 10 ? '0' : '') + x.getMinutes() + ':' +\n                                                    (x.getSeconds() < 10 ? '0' : '') + x.getSeconds();\n                                        }\n                                    },\n                                    y: {\n                                        axisLabelFormatter: function (y) {\n                                            var response = y;\n                                            if (temp_translations.length > 0) {\n                                                response = translations[temp_translations[y]] ? translations[temp_translations[y]] : '';\n                                            }\n\n                                            return response;\n                                        },\n                                        valueFormatter: function (y) {\n                                            var response = y;\n                                            if (temp_translations.length > 0) {\n                                                response = translations[temp_translations[y]] ? translations[temp_translations[y]] : '';\n                                            }\n\n                                            return response;\n                                        }\n                                    }\n                                },\n                                axisLabelWidth: 72,\n                                labels: [\"X\", \"Y\", \"ID\"],\n                                pointClickCallback: function(event, p)\n                                {\n                                    displayOnMap(this.getValue(p.idx, 2), items);\n                                }\n                            });\n\n                        g.resize();\n\n                        div_id = div_id + '1';\n                    } else {\n                        $('.graphs').append(\"<b>\" + graphLabel + \"</b> - \" + $('#no_data_translation').data('translation') + \"<br /><br />\");\n                    }\n\n                    // Scroll to the results\n                    window.scrollTo(0, 500);\n                });\n            },\n    \t\tfunction (fail) {\n    \t\t\tparseErrorsToForm(fail);\n    \t\t}\n\t\t);\n    });\n\n    $(document).delegate('#clear_canbus_diagrams', 'click', function (event)\n    {\n        $('.graphs').html('');\n    });\n};\n\nfunction displayOnMap(id, items)\n{\n    for(var key in items.data)\n    {\n        if(id == key)\n        {\n            // Create map container\n            if ($(\"#canbus_point_map\").length === 0)\n            {\n                var div = document.createElement('div');\n                div.id = 'canbus_point_map';\n                div.style.width = \"100%\";\n                div.style.height = \"500px\";\n            }\n\n            // Show modal\n            $('#baseModal').modal('show');\n\n            if (mapper != undefined)\n            {\n                mapper.clearMarkers();\n                mapper.map.remove();\n            }\n\n            // Prepare modal\n            $('#baseModalTitle').html(translations.view_location);\n            $('#baseModal .modal-body .modal-body-content').append(div);\n            mapper = app.mapper.load('canbus_point_map', false);\n            $(\".modal-body-loading\").hide();\n\n            // Create marker and add it to map\n            var gps_event = items.data[key];\n            var latLngPoint = [parseFloat(gps_event.latitude), parseFloat(gps_event.longitude)];\n            var marker = L.marker(latLngPoint);\n            assignIcon(marker, gps_event.device_status, gps_event.azimuth);\n            marker.addTo(mapper.map);\n\n            // Fit bounds\n            setTimeout(function ()\n            {\n                mapper.map.fitBounds(\n                    [latLngPoint],\n                    {padding: [50, 50]}\n                );\n            }, 100);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}