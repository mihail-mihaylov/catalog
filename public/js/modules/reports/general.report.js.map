{"version":3,"sources":["general.report.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"general.report.js","sourcesContent":["$(function() {\n\nvar map, points=[], allpoints=[], allpolylines=[], polygroup, pointgroup, allpointsgroup, bounds, drawnPois, all30thpoints=[], all30thpointsgroup, all10thpointsgroup, all10thpoints=[], idlingDonut = false, trips = [];\nvar deviceId = $('.device_id').attr('device-id');\nvar state = 0;\nvar visible_trips = [];\nvar tripstable = $('#tripstable').dataTable({\n    \"sDom\": 'ft<\"row\"<\"col-md-5\"l><\"col-md-7\"p>>',\n    \"info\": false,\n    \"paging\": true,\n    \"aaSorting\": [],\n    \"responsive\" : {\n        \"details\": {\n            \"type\": 'column'\n        }\n    },\n    \"columnDefs\": [\n        {\n            \"className\": 'control',\n            \"orderable\": false,\n            \"targets\":   0\n        },\n        {\n            \"orderable\": false,\n            \"targets\":   1\n        }\n    ],\n    \"language\":\n        {\n            \"search\": translations.search,\n            \"searchPlaceholder\":translations.searchPlaceholder,\n            \"lengthMenu\": translations.lengthMenu,\n            \"zeroRecords\": translations.zeroRecords,\n            \"info\": translations.info,\n            \"infoEmpty\": translations.infoEmpty,\n            \"infoFiltered\": translations.infoFiltered,\n            \"paginate\": {\n              \"previous\": translations.previous,\n              \"next\": translations.next\n            }\n        }\n    });\n\nvar generalreportstable = $('#generalreportstable').dataTable({\n    \"sDom\": 'ft<\"row\"<\"col-md-5\"l><\"col-md-7\"p>>',\n    \"info\": false,\n    \"paging\": true,\n    \"aaSorting\": [[0,'desc']],\n    \"responsive\" : {\n        \"details\": {\n            \"type\": 'column'\n        }\n    },\n    \"columnDefs\": [\n        {\n            \"className\": 'control',\n            \"orderable\": false,\n            \"targets\":   0\n        },\n        { \"responsivePriority\": 1, \"targets\": 1 },\n        { \"responsivePriority\": 2, \"targets\": -1 }\n    ],\n    \"language\":\n        {\n            \"search\": translations.search,\n            \"searchPlaceholder\":translations.searchPlaceholder,\n            \"lengthMenu\": translations.lengthMenu,\n            \"zeroRecords\": translations.zeroRecords,\n            \"info\": translations.info,\n            \"infoEmpty\": translations.infoEmpty,\n            \"infoFiltered\": translations.infoFiltered,\n            \"paginate\": {\n              \"previous\": translations.previous,\n              \"next\": translations.next\n            }\n        }\n    });\n$(\"#general_reports_trips_list .dataTables_filter\").appendTo($(\".general_reports_trips_search\"));\n$(\"#general_reports_list .dataTables_filter\").appendTo($(\".general_reports_search\"));\n\n\nvar polyColors = new Array(\"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\", \"#1ab394\", \"#f8ac59\", \"#23c6c8\", \"#1c84c6\", \"#ed5565\");\n\n// var polyColors = ['#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d', '#dc4756', '#14edc1', '#fce652', '#57f7f9', '#1b618d'];\n\nvar polyBadges = new Array(\"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\", \"primary\", \"warning\", \"info\", \"success\", \"danger\");\n\n$(document).ready(function(){\n\n    mapper = app.mapper.load('map', false);\n    mapper.toggleFullscreenControl(true);\n    mapper.toggleMeasureControl(true);\n\n    mapper.map.on('zoomend', function()\n    {\n        var zoom = mapper.map.getZoom();\n        switch (true) {\n            case (0 <= zoom && zoom < 8):\n                state = 200;\n                break;\n            case (8 <= zoom && zoom < 10):\n                state = 100;\n                break;\n            case (10 <= zoom && zoom < 12):\n                state = 50;\n                break;\n            case (12 <= zoom && zoom < 14):\n                state = 10;\n                break;\n            case (14 <= zoom && zoom < 16):\n                state = 5;\n                break;\n            case (16 <= zoom && zoom <= 18):\n                state = 2;\n                break;\n        }\n        redrawMotionPoints();\n    });\n\n    drawnPois = new L.layerGroup();\n    bounds = new L.LatLngBounds();\n    // getAddresses('generalreportstable', generalreportstable);\n\n    var switch_elem = document.querySelector('#showpois');\n    var switch_init = new Switchery(switch_elem);\n\n    switch_elem.onchange = function() {\n\n        if(switch_elem.checked) {\n            loadPois();\n        } else {\n            hidePois();\n\n            // TODO\n            // setTimeout(function()\n            // {\n            //     mapper.map.fitBounds(bounds, { padding: [50,50] });\n            // }, 250);\n        }\n    };\n\n    // Load Trips on Click\n    $(document).on('click', '.change-map-to',function(e)\n    {\n        // Change button color\n        $(\".change-map-to\").not(this).removeClass('btn-success');\n        $(\".change-map-to\").not(this).addClass('btn-default');\n\n        $(this).removeClass('btn-default');\n        $(this).addClass('btn-success');\n\n        e.preventDefault();\n\n        // Get the trip date from the id attribute of the link\n        var tripdate = $(this).attr('tripdate');\n\n        // console.log(deviceId);\n        loadTrips(tripdate, deviceId);\n        reloadStats(tripdate);\n\n        // Scroll to the map\n        $('html, body').animate({\n            scrollTop: $(\"#map\").offset().top\n        }, 700);\n\n    });\n\n    $(document).on('change', '#check_all_trips',function(e)\n    {\n        if($('#check_all_trips').prop('checked'))\n        {\n            // Clear all data from map\n            clearObjects();\n            mapper.clearMarkers();\n\n            // Load all trips\n            $(\"input.trips-visibility\", tripstable.fnGetNodes()).each(function(){\n                drawTrip(trips[$(this).attr('tripNumber')]['trip'],$(this).attr('tripNumber'));\n            });\n\n            tripstable.$('input.trips-visibility').prop('checked', true);\n        } else {\n            // Clear all data from map\n            clearObjects();\n            mapper.clearMarkers();\n            tripstable.$('input.trips-visibility').prop('checked', false);\n        }\n    });\n\n    $(document).on('change', \"input.trips-visibility\", function(e)\n    {\n        if ($(this).prop('checked'))\n        {\n            drawTrip(trips[$(this).attr('tripNumber')]['trip'], $(this).attr('tripNumber'));\n        }\n        else\n        {\n            removeTripFromMap($(this).attr('tripNumber'));\n        }\n    });\n\n    // Load first day if exists, if not - load last position\n    if($('.change-map-to').first().length)\n    {\n        $('.change-map-to').first().click();\n    }\n    else\n    {\n        addLastLocation();\n    }\n});\n\nfunction loadTrips(tripdate, deviceId)\n{\n    // add spinner while loading\n    $(\"table#tripstable tbody\").html(\"<tr><td colspan='9 text-center'><div class='sk-spinner sk-spinner-three-bounce'><div class='sk-bounce1'></div><div class='sk-bounce2'></div><div class='sk-bounce3'></div></div></td></tr>\");\n\n    // Clear all data from map\n    clearObjects();\n    mapper.clearMarkers();\n\n    // Get trips by day\n    requester.get('/reports/general/trips/'+tripdate+'/'+deviceId).then(function (data)\n    {\n        // Clear table and map before reloading the new trips\n        tripstable.fnClearTable();\n        var tripNumber = 1;\n        trips = [];\n\n        // Iterating the trips\n        $.each(data.trips, function(i, trip)\n        {\n            loadTrip(trip, tripdate, tripNumber);\n            tripNumber++;\n        });\n\n        // Fit bounds after trip has loaded\n        setTimeout(function()\n            {\n                mapper.map.fitBounds(bounds, { padding: [50, 50] });\n            }, 250);\n\n        // Add geoaddresses to columns\n        // getAddresses('tripstable', tripstable);\n    },\n    function (httperror) {\n\n        if(typeof httperror.status != \"undefined\" && httperror.status == 401) {\n            console.log('failed');\n            // window.location = \"/auth/login?expired=1\";\n        }\n    });\n}\n\nfunction loadTrip(trip, tripdate, tripNumber)\n{\n    // Undefined variables handling\n    if (trip.end_time == null) {\n        trip.end_time = \"-\";\n    }\n\n    if (trip.driver == null) {\n        trip.driver = \"-\";\n    } else {\n        trip.driver = trip.driver.translation[0].first_name + ' ' + trip.driver.translation[0].last_name\n    }\n\n    if (trip.translation[0]) {\n        trip.start_address = trip.translation[0].start_address;\n        trip.end_address = trip.translation[0].end_address;\n    } else {\n        trip.start_address = '-';\n        trip.end_address = '-';\n    }\n\n    if (trip.distance == null) {\n        trip.distance = '0.0';\n    }\n\n    if (trip.distance_can == null) {\n        trip.distance = '0.0';\n    }\n\n\n    var row = \"\";\n    drawTrip(trip, tripNumber);\n\n    //Adding row to the trips table\n    tripstable.fnAddData([\n        null,\n        '<input type=\"checkbox\" checked data-tripdate=\"' + tripdate + '\" tripNumber=\"' + tripNumber + '\" class=\"trips-visibility\" />',\n        '<span class=\"badge badge-' + polyBadges[tripNumber] + '\">' + tripNumber + '</span>',\n        trip.driver,\n        toDate(trip.start_time, 'HH:mm') + ' ' + translations.hours,\n        toDate(trip.end_time, 'HH:mm') + ' ' + translations.hours,\n        getTripTravelTime(trip) + ' ' + translations.hours,\n        trip.start_address,\n        trip.end_address,\n        (parseFloat(trip.distance)).toFixed(1) + ' ' + translations.km,\n        (parseFloat(trip.distance_can)).toFixed(1) + ' ' + translations.km\n    ]);\n}\n\nfunction drawTrip(trip, tripNumber)\n{\n    console.log(trip);\n    trips[tripNumber] = [];\n    trips[tripNumber]['trip'] = trip;\n    trips[tripNumber]['motion_points'] = [];\n    // trips[tripNumber]['motion_points']['all_points'] = [];\n    // trips[tripNumber]['motion_points']['all_points_layer'] = null;\n    trips[tripNumber]['motion_points']['every_2th_point'] = [];\n    trips[tripNumber]['motion_points']['every_2th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_5th_point'] = [];\n    trips[tripNumber]['motion_points']['every_5th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_10th_point'] = [];\n    trips[tripNumber]['motion_points']['every_10th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_30th_point'] = [];\n    trips[tripNumber]['motion_points']['every_30th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_50th_point'] = [];\n    trips[tripNumber]['motion_points']['every_50th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_100th_point'] = [];\n    trips[tripNumber]['motion_points']['every_100th_point_layer'] = null;\n    trips[tripNumber]['motion_points']['every_200th_point'] = [];\n    trips[tripNumber]['motion_points']['every_200th_point_layer'] = null;\n    trips[tripNumber]['motion_points_layer'] = null;\n    trips[tripNumber]['stop_points'] = [];\n    trips[tripNumber]['stop_points_layer'] = null;\n    trips[tripNumber]['rest_points'] = [];\n    trips[tripNumber]['rest_points_layer'] = null;\n    trips[tripNumber]['first_last_points'] = [];\n    trips[tripNumber]['first_last_points_layer'] = null;\n    trips[tripNumber]['polyline_points'] = [];\n    trips[tripNumber]['polyline'] = null;\n    trips[tripNumber]['drawn'] = true;\n\n    $.each(trip.gps_events, function(gpsEventNumber, gpsEvent)\n    {\n        var location = new L.LatLng(gpsEvent.latitude, gpsEvent.longitude);\n\n        // Push location to polyline_points array\n        trips[tripNumber]['polyline_points'].push(location);\n\n        bounds.extend(location);\n        assignMarker(gpsEventNumber, gpsEvent, tripNumber, trip, location);\n    });\n\n    var polyline = new L.Polyline(trips[tripNumber]['polyline_points'], {\n        color: polyColors[tripNumber],\n        weight: 6,\n        opacity: 1,\n        smoothFactor: 1\n    });\n\n\n    // Assign label\n    var label = \"<strong>\"+translations.course_number+\" \"+tripNumber+\"</strong><br/>\";\n\n    label += translations.tookoff + \": \" + toDate(trip.start_time, 'D.MM.YYYY H:mm') + \"<br/>\";\n    label += translations.arrivedat + \": \" + toDate(trip.end_time, 'D.MM.YYYY H:mm') + \"<br/>\";\n    label += translations.run + \"<sup>\" + translations.gps + \"</sup>: \" + parseFloat(trip.distance).toFixed(1) + \" \" + translations.km + \"<br/>\";\n    label += translations.run + \"<sup>\" + translations.can + \"</sup>: \" + parseFloat(trip.distance_can).toFixed(1) + \" \" + translations.km + \"<br/>\";\n    label += translations.driver + \": \" + trip.driver;\n\n\n    polyline.bindLabel(label);\n\n    // Add polyline to the global polylines array\n    trips[tripNumber]['polyline'] = polyline;\n\n    // Create markers groups from the arrays\n    trips[tripNumber]['first_last_points_layer'] = L.layerGroup(trips[tripNumber]['first_last_points']);\n    trips[tripNumber]['rest_points_layer'] = L.layerGroup(trips[tripNumber]['rest_points']);\n    trips[tripNumber]['stop_points_layer'] = L.layerGroup(trips[tripNumber]['stop_points']);\n    // trips[tripNumber]['motion_points']['all_points_layer'] =\n    //     L.layerGroup(trips[tripNumber]['motion_points']['all_points']);\n\n\n    trips[tripNumber]['motion_points']['every_2th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_2th_point']);\n\n    trips[tripNumber]['motion_points']['every_5th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_5th_point']);\n\n    trips[tripNumber]['motion_points']['every_10th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_10th_point']);\n\n    trips[tripNumber]['motion_points']['every_30th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_30th_point']);\n\n    trips[tripNumber]['motion_points']['every_50th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_50th_point']);\n\n    trips[tripNumber]['motion_points']['every_100th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_100th_point']);\n\n    trips[tripNumber]['motion_points']['every_200th_point_layer'] =\n        L.layerGroup(trips[tripNumber]['motion_points']['every_200th_point']);\n\n    // Add polyline to map\n    mapper.map.addLayer(polyline);\n\n    // Add the points group to the map\n    mapper.map.addLayer(trips[tripNumber]['first_last_points_layer']);\n    mapper.map.addLayer(trips[tripNumber]['rest_points_layer']);\n    mapper.map.addLayer(trips[tripNumber]['stop_points_layer']);\n\n\n    var zoom = mapper.map.getZoom();\n    switch (true) {\n        case (0 <= zoom && zoom < 8):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_200th_point_layer']);\n            break;\n        case (8 <= zoom && zoom < 10):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_100th_point_layer']);\n            break;\n        case (10 <= zoom && zoom < 12):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_50th_point_layer']);\n            break;\n        case (12 <= zoom && zoom < 14):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_10th_point_layer']);\n            break;\n        case (14 <= zoom && zoom < 16):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_5th_point_layer']);\n            break;\n        case (16 <= zoom && zoom <= 18):\n            mapper.map.addLayer(trips[tripNumber]['motion_points']['every_2th_point_layer']);\n            break;\n    }\n}\n\nfunction removeTripFromMap(tripNumber)\n{\n    mapper.map.removeLayer(trips[tripNumber]['polyline']);\n    mapper.map.removeLayer(trips[tripNumber]['first_last_points_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['rest_points_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['stop_points_layer']);\n    // mapper.map.removeLayer(trips[tripNumber]['motion_points']['all_points_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_2th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_5th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_10th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_30th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_50th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_100th_point_layer']);\n    mapper.map.removeLayer(trips[tripNumber]['motion_points']['every_200th_point_layer']);\n    trips[tripNumber]['drawn'] = false;\n}\n\nfunction redrawMotionPoints()\n{\n    if(trips.length > 0)\n    {\n        for(var n in trips){\n            if(trips[n]['drawn'])\n            {\n                if(state == 200)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_200th_point_layer']);\n\n                }\n\n                if(state == 100)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n\n                if(state == 50)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n\n                if(state == 30)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n\n                if(state == 10)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n\n                if(state == 5)\n                {\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.addLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n\n                if(state == 2)\n                {\n                    mapper.map.addLayer(trips[n]['motion_points']['every_2th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_5th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_10th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_30th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_50th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_100th_point_layer']);\n                    mapper.map.removeLayer(trips[n]['motion_points']['every_200th_point_layer']);\n                }\n            }\n        }\n    }\n}\n\nfunction assignMarker(gpsEventNumber, gpsEvent, tripNumber, trip, location)\n{\n    if(gpsEventNumber == 0)\n    {\n        var firstpoint = new L.Marker(location, {\n            icon: begin_trip,\n            zIndexOffset: 1300\n        });\n        firstpoint.bindLabel(createLabel(tripNumber, gpsEvent, trip));\n        trips[tripNumber]['first_last_points'].push(firstpoint);\n    }\n    else if(gpsEventNumber == trip.gps_events.length - 1)\n    {\n        var lastpoint = new L.Marker(location, {\n            icon: end_trip,\n            zIndexOffset: 1300\n        });\n        lastpoint.bindLabel(createLabel(tripNumber, gpsEvent, trip));\n        trips[tripNumber]['first_last_points'].push(lastpoint);\n    }\n    else\n    {\n        if(gpsEvent.device_status == 'ignition_on_motion')\n        {\n            var motionpoint = new L.rotatedMarker(location, {\n                icon: arrow_move,\n                angle: parseInt(gpsEvent.azimuth)\n            });\n\n            motionpoint.bindLabel(createLabel(tripNumber, gpsEvent, trip));\n\n            if(gpsEventNumber % 200 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_200th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 100 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_100th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 50 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_50th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 30 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_30th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 10 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_10th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 5 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_5th_point'].push(motionpoint);\n            }\n\n            if(gpsEventNumber % 2 == 0)\n            {\n                trips[tripNumber]['motion_points']['every_2th_point'].push(motionpoint);\n            }\n\n            // trips[tripNumber]['motion_points']['all_points'].push(motionpoint);\n        }\n\n        if(gpsEvent.device_status == 'ignition_on_rest')\n        {\n            if(trip.gps_events[gpsEventNumber - 1].device_status != 'ignition_on_rest')\n            {\n                var restpoint = new L.Marker(location);\n                assignIcon(restpoint, gpsEvent.device_status, gpsEvent.azimuth);\n                restpoint.bindLabel(createLabel(tripNumber, gpsEvent, trip));\n                trips[tripNumber]['rest_points'].push(restpoint);\n            }\n        }\n\n        if (gpsEvent.device_status == 'ignition_off_rest')\n        {\n            var stoppoint = new L.marker(location, {\n                zIndexOffset: 1200\n            });\n\n            assignIcon(stoppoint, gpsEvent.device_status, gpsEvent.azimuth);\n            stoppoint.bindLabel(createLabel(tripNumber, gpsEvent, trip));\n            trips[tripNumber]['stop_points'].push(stoppoint);\n        }\n\n        if( gpsEvent.device_status == 'tow' ||\n            gpsEvent.device_status == 'fake_tow' ||\n            gpsEvent.device_status == 'ignition_off_motion')\n        {\n            var towedpoint = new L.Marker(location);\n            assignIcon(towedpoint, gpsEvent.device_status, gpsEvent.azimuth);\n        }\n\n        if(gpsEvent.device_status == 'sensor_rest')\n        {\n            var sensorRestPoint = new L.Marker(location);\n            assignIcon(sensorRestPoint, gpsEvent.device_status, gpsEvent.azimuth);\n        }\n\n        if(gpsEvent.device_status == 'sensor_motion')\n        {\n            var sensorMotionPoint = new L.Marker(location);\n            assignIcon(sensorMotionPoint, gpsEvent.device_status, gpsEvent.azimuth);\n        }\n\n        if(gpsEvent.device_status == 'undefined')\n        {\n            var undefinedPoint = new L.Marker(location);\n            assignIcon(undefinedPoint, gpsEvent.device_status, gpsEvent.azimuth);\n        }\n    }\n}\n\nfunction createLabel(tripNumber, gpsEvent, trip)\n{\n    return translations.course_number+\": <strong>\"+tripNumber+\"</strong>   |   \"+\n    translations.time+\": <strong>\"+toDate(gpsEvent.gps_utc_time, \"H:mm\")+translations.hours+\"</strong><br/>\"+\n    translations.speed+\": <strong>\"+\n    parseFloat(gpsEvent.speed).toFixed(1)+\" \"+translations.km_hours+\"</strong><br/>\"+\n    translations.first_movement+\": <strong>\"+toDate(trip.start_time, 'D.MM.YYYY H:mm')+\"</strong>\";\n\n}\n\nfunction reloadStats(tripdate)\n{\n    tripdate = tripdate.substring(0, tripdate.indexOf('+'));\n\n    var work_hours = $('#report-'+tripdate+' .work_hours').val();\n    var move_time = $('#report-'+tripdate+' .move_time').val();\n    var stop_time = parseInt(work_hours) - parseInt(move_time);\n\n    if(move_time == '')\n    {\n        move_time = 0;\n    }\n\n    if(work_hours != '')\n    {\n        var moveTimeValue = parseFloat((move_time*100)/work_hours).toFixed(1);\n        var stopTimeValue = parseFloat((stop_time*100)/work_hours).toFixed(1);\n\n        if(!idlingDonut) {\n\n            idlingDonut = Morris.Donut({\n                element: 'efective-work',\n                data: [\n                    {label: translations.motion_hours, value: moveTimeValue },\n                    {label: translations.stop_hours, value: stopTimeValue }],\n                resize: true,\n                colors: ['#87d6c6', '#54cdb4'],\n                formatter: function (y, data) { return y + \"%\" }\n            });\n        }\n        else\n        {\n            idlingDonut.setData([\n                {label: translations.motion_hours, value: moveTimeValue },\n                {label: translations.stop_hours, value: stopTimeValue }\n            ]);\n        }\n    }\n\n}\n\nfunction clearObjects()\n{\n    for(var n in trips)\n    {\n        removeTripFromMap(n);\n    }\n}\n\nfunction getTripTravelTime(trip)\n{\n    var start_time = moment(trip.start_time.date);\n    var end_time = moment(trip.end_time.date);\n\n    var milliseconds = moment.duration(end_time.diff(start_time));\n    var duration = moment.duration(milliseconds, \"milliseconds\")\n        .format(\"hh:mm\", { trim: false });\n\n   return duration;\n}\n\nfunction  toDate(date, format)\n{\n    var localTime  = moment(date.date).toDate();\n    localTime = moment(localTime).format(format);\n    return localTime;\n}\n\nfunction toMinutes(seconds)\n{\n    return moment.duration(seconds, \"seconds\").format(\"hh:mm\", { trim: false });\n}\n\nL.RotatedMarker = L.Marker.extend({\n    options: {\n        angle: 0\n    },\n    statics: {\n        // determine the best and only CSS transform rule to use for this browser\n        bestTransform: L.DomUtil.testProp([\n            'transform',\n            'WebkitTransform',\n            'msTransform',\n            'MozTransform',\n            'OTransform'\n        ])\n    },\n    _setPos: function (pos) {\n        L.Marker.prototype._setPos.call(this, pos);\n\n        var rotate = ' rotate(' + this.options.angle + 'deg)';\n        if (L.RotatedMarker.bestTransform) {\n            // use the CSS transform rule if available\n            this._icon.style[L.RotatedMarker.bestTransform] += rotate;\n        } else if(L.Browser.ie) {\n            // fallback for IE6, IE7, IE8\n            var rad = this.options.angle * L.LatLng.DEG_TO_RAD,\n                costheta = Math.cos(rad),\n                sintheta = Math.sin(rad);\n            this._icon.style.filter += ' progid:DXImageTransform.Microsoft.Matrix(sizingMethod=\\'auto expand\\', M11=' +\n                costheta + ', M12=' + (-sintheta) + ', M21=' + sintheta + ', M22=' + costheta + ')';\n        }\n    }\n});\n\nL.rotatedMarker = function (pos, options) {\n    return new L.RotatedMarker(pos, options);\n};\n\nfunction getAddresses(tablename, tableobject)\n{\n    var locale = $('.data-locale').data('locale');\n    $(tableobject.fnGetNodes()).each(function(n, tr){\n        $(tr).find('.coord-address').each(function(p, coordAddress)\n        {\n            var lat = parseFloat($(coordAddress).find('.lat-lng .lat').html());\n            var lng = parseFloat($(coordAddress).find('.lat-lng .lng').html());\n\n            var url = 'http://nominatim.openstreetmap.org/reverse?json_callback=?&accept-language='+locale+')';\n\n            $.getJSON( url, {\n                format: \"json\",\n                lat: lat,\n                lon: lng,\n                zoom: 27,\n                addressdetails: 1\n            })\n            .done(function( json )\n            {\n\n                var pos = tableobject.fnGetPosition( coordAddress );\n                // Update the data array and return the value\n                tableobject.fnUpdate(json.address.road+', '+json.address.city+', '+json.address.country, pos[0], pos[1]);\n            })\n            .fail(function( jqxhr, textStatus, error ) {\n                var err = textStatus + \", \" + error;\n                console.log( \"Request Failed: \" + err );\n                $(coordAddress).find('.address').html('Unknown');\n            });\n        });\n    });\n}\n\n\nfunction addLastLocation()\n{\n    requester.get('/reports/general/lastEvent/'+deviceId).then(function (data)\n    {\n        var lastEvent = data.lastEvent;\n        if(lastEvent != null)\n        {\n            var latLng = new L.LatLng(lastEvent.latitude, lastEvent.longitude);\n\n            mapper.addMarker(latLng);\n            bounds.extend(latLng);\n\n            setTimeout(function()\n            {\n                mapper.map.fitBounds(bounds, { padding: [50, 50] });\n            }, 250);\n        }\n    },\n    function (httperror) {\n\n        if(typeof httperror.status != \"undefined\" && httperror.status == 401) {\n            console.log('failed lastEvent');\n            // window.location = \"/auth/login?expired=1\";\n        }\n    });\n}\n\n});\n"],"sourceRoot":"/source/"}