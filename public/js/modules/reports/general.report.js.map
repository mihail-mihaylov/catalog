{"version":3,"sources":["general.report.js"],"names":[],"mappingsfile":"general.report.js","sourcesContent":["$(function() {\n\nvar map, bounds, drawnPois, trip = [];\nvar deviceId = $('.device_id').attr('device-id');\nvar state = 0;\nvar visible_trips = [];\nvar tripstable = $('#tripstable').dataTable({\n    \"sDom\": 'ft<\"row\"<\"col-md-5\"l><\"col-md-7\"p>>',\n    \"info\": false,\n    \"paging\": true,\n    \"aaSorting\": [],\n    \"responsive\" : {\n        \"details\": {\n            \"type\": 'column'\n        }\n    },\n    \"columnDefs\": [\n        {\n            \"className\": 'control',\n            \"orderable\": false,\n            \"targets\":   0\n        },\n        {\n            \"orderable\": false,\n            \"targets\":   1\n        }\n    ],\n    \"language\":\n        {\n            \"search\": translations.search,\n            \"searchPlaceholder\":translations.searchPlaceholder,\n            \"lengthMenu\": translations.lengthMenu,\n            \"zeroRecords\": translations.zeroRecords,\n            \"info\": translations.info,\n            \"infoEmpty\": translations.infoEmpty,\n            \"infoFiltered\": translations.infoFiltered,\n            \"paginate\": {\n              \"previous\": translations.previous,\n              \"next\": translations.next\n            }\n        }\n    });\n\nvar generalreportstable = $('#generalreportstable').dataTable({\n    \"sDom\": 'ft<\"row\"<\"col-md-5\"l><\"col-md-7\"p>>',\n    \"info\": false,\n    \"paging\": true,\n    \"aaSorting\": [[0,'desc']],\n    \"responsive\" : {\n        \"details\": {\n            \"type\": 'column'\n        }\n    },\n    \"columnDefs\": [\n        {\n            \"className\": 'control',\n            \"orderable\": false,\n            \"targets\":   0\n        },\n        { \"responsivePriority\": 1, \"targets\": 1 },\n        { \"responsivePriority\": 2, \"targets\": -1 }\n    ],\n    \"language\":\n        {\n            \"search\": translations.search,\n            \"searchPlaceholder\":translations.searchPlaceholder,\n            \"lengthMenu\": translations.lengthMenu,\n            \"zeroRecords\": translations.zeroRecords,\n            \"info\": translations.info,\n            \"infoEmpty\": translations.infoEmpty,\n            \"infoFiltered\": translations.infoFiltered,\n            \"paginate\": {\n              \"previous\": translations.previous,\n              \"next\": translations.next\n            }\n        }\n    });\n$(\"#general_reports_trips_list .dataTables_filter\").appendTo($(\".general_reports_trips_search\"));\n$(\"#general_reports_list .dataTables_filter\").appendTo($(\".general_reports_search\"));\n\n$(document).ready(function(){\n\n    mapper = app.mapper.load('map', false);\n    mapper.toggleFullscreenControl(true);\n    mapper.toggleMeasureControl(true);\n\n    drawnPois = new L.layerGroup();\n    bounds = new L.LatLngBounds();\n\n    var switch_elem = document.querySelector('#showpois');\n    var switch_init = new Switchery(switch_elem);\n\n    switch_elem.onchange = function() {\n\n        if(switch_elem.checked) {\n            loadPois();\n        } else {\n            hidePois();\n\n            // TODO\n            // setTimeout(function()\n            // {\n            //     mapper.map.fitBounds(bounds, { padding: [50,50] });\n            // }, 250);\n        }\n    };\n\n    // Load Trips on Click\n    $(document).on('click', '.change-map-to',function(e)\n    {\n        // Change button color\n        $(\".change-map-to\").not(this).removeClass('btn-success');\n        $(\".change-map-to\").not(this).addClass('btn-default');\n\n        $(this).removeClass('btn-default');\n        $(this).addClass('btn-success');\n\n        e.preventDefault();\n\n        // Get the trip date from the id attribute of the link\n        var tripdate = $(this).attr('tripdate');\n\n        loadTrip(tripdate, deviceId);\n\n        // Scroll to the map\n        $('html, body').animate({\n            scrollTop: $(\"#map\").offset().top\n        }, 700);\n\n    });\n\n    // Load first day if exists, if not - load last position\n    console.log($('.change-map-to').first().length);\n    if($('.change-map-to').first().length)\n    {\n        $('.change-map-to').first().click();\n    }\n    else\n    {\n        addLastLocation();\n    }\n});\n\nfunction loadTrip(tripdate, deviceId)\n{\n    // Clear all data from map\n    removeTripFromMap();\n    mapper.clearMarkers();\n\n    // Get trips by day\n    requester.get('/reports/general/trips/'+tripdate+'/'+deviceId).then(function (data)\n    {\n        drawTrip(data.events);\n\n        // Fit bounds after trip has loaded\n        setTimeout(function()\n            {\n                mapper.map.fitBounds(bounds, { padding: [50, 50] });\n            }, 250);\n    },\n    function (httperror) {\n\n        if(typeof httperror.status != \"undefined\" && httperror.status == 401) {\n            console.log('failed');\n            // window.location = \"/auth/login?expired=1\";\n        }\n    });\n}\n\nfunction drawTrip(events)\n{\n    trip = [];\n    trip['polyline_points'] = [];\n    trip['polyline'] = null;\n    trip['first_last_points'] = [];\n    trip['first_last_points_layer'] = null;\n    trip['drawn'] = true;\n\n    $.each(events, function(gpsEventNumber, gpsEvent)\n    {\n        var location = new L.LatLng(gpsEvent.latitude, gpsEvent.longitude);\n\n        // Push location to polyline_points array\n        trip['polyline_points'].push(location);\n        bounds.extend(location);\n        assignMarker(gpsEventNumber, trip, location, events, gpsEvent);\n    });\n\n    var polyline = new L.Polyline(trip['polyline_points'], {\n        color: \"#ed5565\",\n        weight: 6,\n        opacity: 1,\n        smoothFactor: 1\n    });\n\n    // Add polyline to the global polylines array\n    trip['polyline'] = polyline;\n\n    // Create markers groups from the arrays\n    trip['first_last_points_layer'] = L.layerGroup(trip['first_last_points']);\n    // Add polyline to map\n    mapper.map.addLayer(polyline);\n\n    // Add the points group to the map\n    mapper.map.addLayer(trip['first_last_points_layer']);\n}\n\nfunction removeTripFromMap()\n{\n    if (trip['polyline'] != undefined) {\n        mapper.map.removeLayer(trip['first_last_points_layer']);\n        mapper.map.removeLayer(trip['polyline']);\n        trip['drawn'] = false;\n    }\n}\n\nfunction assignMarker(gpsEventNumber, trip, location, events, gpsEvent)\n{\n    if(gpsEventNumber == 0)\n    {\n        var firstpoint = new L.Marker(location, {\n            icon: begin_trip,\n            zIndexOffset: 1300\n        });\n        getAddresses(gpsEvent.latitude, gpsEvent.longitude, firstpoint);\n        trip['first_last_points'].push(firstpoint);\n    }\n    else if(gpsEventNumber == events.length - 1)\n    {\n        var lastpoint = new L.Marker(location, {\n            icon: end_trip,\n            zIndexOffset: 1300\n        });\n        getAddresses(gpsEvent.latitude, gpsEvent.longitude, lastpoint);\n        trip['first_last_points'].push(lastpoint);\n    }\n}\n\nfunction  toDate(date, format)\n{\n    var localTime  = moment(date.date).toDate();\n    localTime = moment(localTime).format(format);\n    return localTime;\n}\n\nfunction toMinutes(seconds)\n{\n    return moment.duration(seconds, \"seconds\").format(\"hh:mm\", { trim: false });\n}\n\nL.RotatedMarker = L.Marker.extend({\n    options: {\n        angle: 0\n    },\n    statics: {\n        // determine the best and only CSS transform rule to use for this browser\n        bestTransform: L.DomUtil.testProp([\n            'transform',\n            'WebkitTransform',\n            'msTransform',\n            'MozTransform',\n            'OTransform'\n        ])\n    },\n    _setPos: function (pos) {\n        L.Marker.prototype._setPos.call(this, pos);\n\n        var rotate = ' rotate(' + this.options.angle + 'deg)';\n        if (L.RotatedMarker.bestTransform) {\n            // use the CSS transform rule if available\n            this._icon.style[L.RotatedMarker.bestTransform] += rotate;\n        } else if(L.Browser.ie) {\n            // fallback for IE6, IE7, IE8\n            var rad = this.options.angle * L.LatLng.DEG_TO_RAD,\n                costheta = Math.cos(rad),\n                sintheta = Math.sin(rad);\n            this._icon.style.filter += ' progid:DXImageTransform.Microsoft.Matrix(sizingMethod=\\'auto expand\\', M11=' +\n                costheta + ', M12=' + (-sintheta) + ', M21=' + sintheta + ', M22=' + costheta + ')';\n        }\n    }\n});\n\nL.rotatedMarker = function (pos, options) {\n    return new L.RotatedMarker(pos, options);\n};\n\nfunction getAddresses(latitude, longitude, point)\n{\n    var lat = parseFloat(latitude);\n    var lng = parseFloat(longitude);\n\n    var url = 'http://nominatim.openstreetmap.org/reverse?json_callback=?&accept-language=en)';\n\n    $.getJSON( url, {\n        format: \"json\",\n        lat: lat,\n        lon: lng,\n        zoom: 27,\n        addressdetails: 1\n    })\n    .done(function( json )\n    {\n        // Update the data array and return the value\n        point.bindLabel(json.display_name);\n    })\n    .fail(function( jqxhr, textStatus, error ) {\n        var err = textStatus + \", \" + error;\n        console.log( \"Request Failed: \" + err );\n    });\n}\n\n\nfunction addLastLocation()\n{\n    requester.get('/reports/general/lastEvent/'+deviceId).then(function (data)\n    {\n        var lastEvent = data.lastEvent;\n        if(lastEvent != null)\n        {\n            var latLng = new L.LatLng(lastEvent.latitude, lastEvent.longitude);\n\n            mapper.addMarker(latLng, {icon:stopped_no_signal});\n            bounds.extend(latLng);\n\n            setTimeout(function()\n            {\n                mapper.map.fitBounds(bounds, { padding: [50, 50] });\n            }, 250);\n        }\n    },\n    function (httperror) {\n\n        if(typeof httperror.status != \"undefined\" && httperror.status == 401) {\n            console.log('failed lastEvent');\n            // window.location = \"/auth/login?expired=1\";\n        }\n    });\n}\n\n});\n"],"sourceRoot":"/source/"}