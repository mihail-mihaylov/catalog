{"version":3,"sources":["trackedObjectsGroups.js"],"names":[],"mappingsfile":"trackedObjectsGroups.js","sourcesContent":["window.onload = function () {\n\n    $('[data-toggle=\"tooltip\"]').tooltip();\n\n    $(document).delegate('select[name=\"tracked_object_brand_id\"]', 'change', function () {\n        var element = $(this);\n        var brandId = element.val();\n        requester.get('/trackedobjects/ajax/brand/get_models/' + brandId).then(function (data) {\n            $('#models_holder').html(data.html).fadeIn(100);\n        }, function (error) {\n            console.log(error);\n        });\n    });\n\n    // Update tab:groups -> tracked objects column\n    $(document)\n        .on('modal_form_submited', function(e, response) {\n            updateGroups(response);\n        })\n        .on('update_entity', function(e, response) {\n            updateGroups(response);\n        })\n        .on('delete_entity', function(e, response) {\n           updateGroups(response);\n        });\n\n    function updateGroups(response) {\n        if (response.groups) {\n            $.each(response.groups, function (i, groupTrackedObjects) {\n                var row = $('#groups_table').dataTable().api().row('#'+i).node();\n\n                $('#groups_table').dataTable().api()\n                    .cell(row, 2)\n                    .data(groupTrackedObjects);\n            });\n        }\n    }\n\n    $(document).delegate('.remove_input', 'click', function (ev) {\n        $(this).closest('.inputwidg').remove();\n    });\n\n    $(document).delegate('.destroy_input', 'click', function (ev) {\n        requester.delete($(this).data('destroy'), null, '').then(\n            function (success) {\n                $('.inputswidget').html(subootrccess.html)\n                $('.validation_errors').html('');\n            },\n            function (fail) {\n\n            }\n        );\n    });\n\n    $(document).delegate('.restore_input', 'click', function (ev) {\n        var thisInput = $(this);\n        requester.post($(this).data('restore'), null, '').then(\n            function (success) {\n                $('.inputswidget').html(success.html)\n            },\n            function (fail) {\n\n            }\n        );\n    });\n\n    var hideNonMandatoryTranslationFields = function () {\n        if ($('#input_type').html() != 'digital') {\n            $.each($('.digital_on'), function () {\n                $(this).closest('.form-group').first().addClass('digital').hide();\n            });\n            $.each($('.digital_off'), function () {\n                $(this).closest('.form-group').first().addClass('digital').hide();\n            });\n        }\n    }\n    $(document).delegate('.btn', 'click', function (ev) {\n        if ($(this).hasClass('manage_inputs')) {\n            $('#baseModal').find('.modal-dialog').addClass('modal-lg');\n\n        } else {\n            $('#baseModal').find('.modal-dialog').removeClass('modal-lg');\n        }\n        // setTimeout(function() {\n        //     hideNonMandatoryTranslationFields();\n        // }, 1000);\n    });\n\n    $(document).delegate('.manage_inputs.edit_input, .manage_inputs.add_input', 'click', function(e) {\n        requester.get($(this).data('get'), null, null).then(\n            function (success) {\n                $('.validation_errors').html('');\n                $('.inputwidget').html(success.html);\n                hideNonMandatoryTranslationFields();\n                $('#input_type').trigger('change')\n            },\n            function (fail) {\n\n            }\n        );\n    });\n\n    $(document).delegate('#postinput', 'submit', function (event) {\n        event.preventDefault();\n        requester.post($(this).attr('action'), null, $(this).serialize()).then(\n            function (success) {\n                // console.log([$('.inputswidget').length, success]);\n                $('.inputswidget').html(success.html)\n                $('.validation_errors').html('');\n            },\n            function (fail) {\n                parseErrors(fail);\n            }\n        );\n    });\n\n    $(document).delegate('.postinput', 'click', function (event) {\n        // var inputForm = $(this).closest('form');\n        // console.log('waaaat!?!?!');return false;\n        // requester.post(inputForm.attr('action'), null, inputForm.serialize()).then(\n        //     function (success) {\n        //         // console.log([$('.inputswidget').length, success]);\n        //         $('.inputswidget').html(success.html)\n        //     },\n        //     function (fail) {\n        //         parseErrors(fail);\n        //     }\n        // );\n    });\n\n    $(document).delegate('#input_type', 'change', function (ev) {\n        $('#postinput').children('input').show();\n        $('#postinput').children('select').show();\n\n        var inputType = $(this).children('option:selected').text();\n\n        switch(inputType) {\n            case 'digital':\n                $('.analog').hide();\n                $('.one_wire').hide();\n                // $('input.analog, input.one_wire, select.analog, select.one_wire').hide();\n                $('.digital').show();\n                break;\n            case '1wire':\n                $('.analog').hide();\n                $('.digital').hide();\n                $('.one_wire').show();\n                break;\n            case 'analog':\n                $('.digital').hide();\n                $('.one_wire').hide();\n                $('.analog').show();\n            default: return;\n        }\n    });\n\n    $(document).on('modal_form_loaded', function (ev) {\n        setTimeout(function(){\n            $('#input_type').trigger('change')\n        }, 300);\n    });\n\n    var parseErrors = function (errors) {\n    // Remove error class from input fields\n    $('.form-control').removeClass('error');\n\n    $('.validation_errors').html('');\n\n    // Create alert with error messages\n    var div = $(document.createElement('div'));\n    div.addClass('alert alert-danger alert-dismissable');\n    div.html('<button aria-hidden=\"true\" data-dismiss=\"alert\" class=\"close\" type=\"button\">Ã—</button>');\n\n    // Loop errors\n    $.each(errors.responseJSON, function (key, value) {\n        // Replace names of the fields which are named with array format (.1 with [1]). Example: first_name.1 to first_name[1]\n        if (key.indexOf('.') !== -1) {\n            key = key.split('.').join('][');\n            key = key.replace(/\\./g, '][');\n            key = key.replace(']', '');\n            key += ']';\n        }\n\n        // Add error class to fields with mistake\n        $(\"input[name='\" + key + \"'], select[name='\" + key + \"'], textarea[name='\" + key + \"']\").addClass('error');\n        // Add error to alert\n        div.append('<div class=\"text-left\">' + value + '</div>');\n    });\n\n    $('.validation_errors').append(div);\n}\n\n};\n"],"sourceRoot":"/source/"}