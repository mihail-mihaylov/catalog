{"version":3,"sources":["fuel.js"],"names":[],"mappingsfile":"fuel.js","sourcesContent":["var mapper = undefined;\n$(document).ready(function()\n{\n    $('#fuelReportTable').DataTable({\n        buttons:[\n            {\n                extend: 'print',\n                customize: function ( win ) {\n                    $(win.document.body)\n                        .css( 'font-size', '10pt' )\n                        .prepend(\n                            $('#travel-list').html()\n                        );\n\n                    $(win.document.body).find( 'table' )\n                        .addClass( 'compact' )\n                        .css( 'font-size', 'inherit' );\n                },\n                className: 'btn btn-custom btn-sm pull-right',\n                text: '<i class=\"glyphicon glyphicon-print\"></i> ' + translations.print,\n                title: '',\n                exportOptions: {\n                    columns: ':visible :not(:first-child)',\n                    stripHtml: false\n                }\n            },\n            {\n                extend: 'colvis',\n                className: 'btn btn-custom btn-sm pull-right',\n                text: '<i class=\"fa fa-eye\"></i> ' + translations.colvis,\n                columns: ':not(:first-child)'\n            }\n        ],\n        \"sDom\": 'B ft<\"row\"<\"col-md-5\"l><\"col-md-7\"p>>',\n        \"aaSorting\": [],\n        \"info\": false,\n        \"responsive\" : {\n            \"details\": {\n                \"type\": 'column'\n            }\n        },\n        \"columnDefs\": [\n            {\n                \"className\": 'control ',\n                \"orderable\": false,\n                \"targets\":   0\n            }\n        ],\n        \"paging\": true,\n        \"language\":\n        {\n            \"search\": translations.search,\n            \"searchPlaceholder\":translations.searchPlaceholder,\n            \"lengthMenu\": translations.lengthMenu,\n            \"zeroRecords\": translations.zeroRecords,\n            \"info\": translations.info,\n            \"infoEmpty\": translations.infoEmpty,\n            \"infoFiltered\": translations.infoFiltered,\n            \"paginate\": {\n                \"previous\": translations.previous,\n                \"next\": translations.next\n            }\n        },\n    });\n\n    $(\"#fuelReportTable_wrapper .dt-button\").appendTo($(\"#data-tables-actions\"));\n    $(\"#fuel_reports_list .dataTables_filter\").appendTo($(\".fuel_reports_search\"));\n\n    // Remove datatables styles\n    $(\".buttons-colvis, .buttons-print\").removeClass('dt-button');\n\n    $(document).delegate('#see_fuel_level', 'click', function (event)\n    {\n        // Change button color\n        $(\".see_fuel_level\").not(this).removeClass('btn-success');\n        $(\".see_fuel_level\").not(this).addClass('btn-default');\n\n        $(this).removeClass('btn-default');\n        $(this).addClass('btn-success');\n\n        event.preventDefault();\n\n        var data = $('#from, #to').serialize()+'&deviceId='+$(this).data('deviceid');\n\n        requester.post($(this).data('fuel'), null, data).then(function (success)\n        {\n            // $('.form-control').removeClass('error');\n            $('.graphs').html('');\n            // $('.validation_errors').html('');\n\n            var div_id = 'div_g';\n\n            console.log(success.reports);\n            $.each(success.reports, function (n, items) {\n                var events = \"\";\n                var graphLabel = items.reportName;\n                var temp_translations = [];\n                var temp_key = 0;\n\n                $.each(items.data, function (m, item) {\n                    var graphPoint = item[n];\n\n                    // Skip points\n                    if (m > 0 && graphPoint == items.data[m-1][n] && (m != items.data.length - 1 && graphPoint == items.data[m+1][n])) {\n                        return true;\n                    }\n\n                    // Translations\n                    var key = n + '.' + graphPoint;\n                    if (translations[key] && ! temp_translations[key]) {\n                        temp_key ++;\n                        temp_translations[key] = temp_key;\n                        graphPoint = temp_key;\n                    } else if (translations[key]) {\n                        graphPoint = temp_translations[key];\n                    }\n\n                    events += new Date(moment(item['gps_utc_time']).format(\"YYYY/MM/DD HH:mm:ss\")) + \",\" + graphPoint + \",\"+ m +\"\\n\";\n                });\n\n                for (var x in temp_translations) {\n                    temp_translations[temp_translations[x]] = x;\n                }\n\n                $('.results').removeClass('hidden');\n\n                if (items.data.length > 0) {\n                    // Append div for the current graph\n                    $('.graphs').append('<div id=\"' + div_id + '\"></div><br /><br />');\n\n                    var g = new Dygraph(document.getElementById(div_id),\n                        events,\n                        {\n                            title: graphLabel + (items.label ? ' (' + items.label + ')' : ''),\n                            visibility: [true, false],\n                            axes: {\n                                x: {\n                                    axisLabelFormatter: function(x) {\n                                        return x.getFullYear() + '.' +\n                                            (x.getMonth() + 1 < 10 ? '0' : '') + (x.getMonth() + 1)  + '.' +\n                                            (x.getDate() < 10 ? '0' : '') + x.getDate() + ' ' +\n                                            (x.getHours() < 10 ? '0' : '') + x.getHours() + ':' +\n                                            (x.getMinutes() < 10 ? '0' : '') + x.getMinutes() + ':' +\n                                            (x.getSeconds() < 10 ? '0' : '') + x.getSeconds();\n                                    }\n                                },\n                                y: {\n                                    axisLabelFormatter: function (y) {\n                                        var response = y;\n                                        if (temp_translations.length > 0) {\n                                            response = translations[temp_translations[y]] ? translations[temp_translations[y]] : '';\n                                        }\n\n                                        return response;\n                                    },\n                                    valueFormatter: function (y) {\n                                        var response = y;\n                                        if (temp_translations.length > 0) {\n                                            response = translations[temp_translations[y]] ? translations[temp_translations[y]] : '';\n                                        }\n\n                                        return response;\n                                    }\n                                }\n                            },\n                            axisLabelWidth: 72,\n                            labels: [\"X\", \"Y\", \"ID\"],\n                            pointClickCallback: function(event, p)\n                            {\n                                displayOnMap(this.getValue(p.idx, 2), items);\n                            }\n                        });\n\n                    g.resize();\n\n                    div_id = div_id + '1';\n                } else {\n                    $('.graphs').append(\"<b>\" + graphLabel + \"</b> - \" + $('#no_data_translation').data('translation') + \"<br /><br />\");\n                }\n\n                // Scroll to the results\n                window.scrollTo(0, 500);\n            });\n        },\n        function (fail) {\n            console.log(fail);\n        });\n    });\n\n    $(document).delegate('#clear_fuel_diagrams', 'click', function (event)\n    {\n        $('.graphs').html('');\n    });\n});\n\nfunction displayOnMap(id, items)\n{\n    for(var key in items.data)\n    {\n        if(id == key)\n        {\n            // Create map container\n            if ($(\"#canbus_point_map\").length === 0)\n            {\n                var div = document.createElement('div');\n                div.id = 'canbus_point_map';\n                div.style.width = \"100%\";\n                div.style.height = \"500px\";\n            }\n\n            // Show modal\n            $('#baseModal').modal('show');\n\n            if (mapper != undefined)\n            {\n                mapper.clearMarkers();\n                mapper.map.remove();\n            }\n\n            // Prepare modal\n            $('#baseModalTitle').html(translations.view_location);\n            $('#baseModal .modal-body .modal-body-content').append(div);\n            mapper = app.mapper.load('canbus_point_map', false);\n            $(\".modal-body-loading\").hide();\n\n            // Create marker and add it to map\n            var gps_event = items.data[key];\n            var latLngPoint = [parseFloat(gps_event.latitude), parseFloat(gps_event.longitude)];\n            var marker = L.marker(latLngPoint);\n            assignIcon(marker, gps_event.device_status, gps_event.azimuth);\n            marker.addTo(mapper.map);\n\n            // Fit bounds\n            setTimeout(function ()\n            {\n                mapper.map.fitBounds(\n                    [latLngPoint],\n                    {padding: [50, 50]}\n                );\n            }, 100);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}