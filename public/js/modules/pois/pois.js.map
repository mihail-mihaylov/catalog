{"version":3,"sources":["pois.js"],"names":[],"mappingsfile":"pois.js","sourcesContent":["var marker = false, drawnPois = [], drawnItems, bounds;\n// var mapper = undefined;\nvar mapper_modal = undefined;\n\n$(function(){\n\n    mapper = app.mapper.load('map', false);\n    mapper.toggleFullscreenControl(true);\n    mapper.toggleMeasureControl(true);\n\n    bounds = new L.LatLngBounds();\n    drawnPois = new L.featureGroup();\n\n    loadPois();\n\n});\n\n$(document).on('click', '.reload_action', function (e)\n{\n    setTimeout(function(){\n        drawnPois.clearLayers();\n        loadPois();\n    }, 500);\n});\n\n$(document).on('modal_form_submited', function (e)\n{\n    drawnPois.clearLayers();\n    loadPois();\n});\n\n/**\n * Fit one poi on map\n */\n$(document).delegate('.see_poi_on_map', 'click', function(e)\n{\n    var poi_id = $(this).data('poi-id');\n    var drawnPoi = getPoi(poi_id);\n\n    if(drawnPoi)\n    {\n        var tempGroup = new L.featureGroup().addLayer(drawnPoi);\n        setTimeout(function (){\n            mapper.map.fitBounds(tempGroup.getBounds(), {padding: [50, 50]});\n        }, 100);\n    }\n});\n\n/*\n * Fit pois in map button action\n */\n$(document).delegate('#fit-pois', 'click', function(e)\n{\n    if(drawnPois.getLayers().length > 0)\n    {\n        setTimeout(function()\n        {\n            mapper.map.fitBounds(drawnPois.getBounds(), {padding: [50, 50]});\n        }, 100);\n    }\n});\n\n$(document).on('modal_form_loaded', function (e)\n{\n\n    setTimeout(function()\n    {\n        // Initialize map\n        mapper_modal = app.mapper.load('map_modal', false);\n        mapper_modal.toggleFullscreenControl(true);\n        mapper_modal.toggleMeasureControl(true);\n        drawnItems = new L.featureGroup();\n\n\n        // Get Poi for edit and put it in feature group\n        if($('.response_coordinates').val() != undefined){\n            var poi = JSON.parse($('.response_coordinates').val());\n\n            // Creates drawn object\n            var drawnObject = createObject(poi);\n\n            // Add coordinates to hidden input, for update by php\n            loadCoordinatesField(drawnObject);\n\n            // Add drawn objects to feature group for edit\n            drawnItems.addLayer(drawnObject);\n\n            // Add object to map\n            mapper_modal.map.addLayer(drawnItems);\n\n            // Fit bounds (settimeout because polygon breaks otherwise)\n            setTimeout(function (){\n                mapper_modal.map.fitBounds(drawnItems.getBounds());\n            }, 100);\n        }\n\n        // Initialize draw options for creating Poi\n        var drawControlOptions =\n        {\n            position: 'topleft',\n            draw: {\n                marker: true,\n                polygon: {\n                    allowIntersection: false, // Restricts shapes to simple polygons\n                    drawError: {\n                        color: '#e1e100', // Color the shape will turn when intersects\n                        message: '<strong>A drawing error has occured</strong>',\n                        timeout: 1500\n                    },\n                    shapeOptions: {\n                        color: '#BD2A84'\n                    },\n                    showArea: true\n                },\n                rectangle: {\n                    shapeOptions: {\n                        color: '#BD2A84'\n                    }\n                },\n                circle: {\n                    shapeOptions: {\n                        color: '#BD2A84'\n                    }\n                },\n                polyline: false,\n            },\n            edit: {\n                featureGroup: drawnItems\n            }\n        };\n\n        // Add options to to the map\n        var drawControl = new L.Control.Draw(drawControlOptions);\n        mapper_modal.map.addControl(drawControl);\n\n        // Events for create, edit, delete on drawn items\n        mapper_modal.map.on('draw:created', function(event)\n        {\n            var layer = event.layer;\n            loadCoordinatesField(layer);\n            drawnItems.addLayer(layer);\n        });\n\n        mapper_modal.map.on('draw:edited', function (event)\n        {\n            var layers = event.layers;\n            layers.eachLayer(function (layer)\n            {\n                loadCoordinatesField(layer);\n                drawnItems.addLayer(layer);\n            });\n        });\n\n        mapper_modal.map.on('draw:deleted', function(event)\n        {\n            drawnItems.clearLayers();\n            $('#baseModal').find('#locationvalue').val(\"\");\n        });\n\n        mapper_modal.map.on('draw:drawstart', function(event)\n        {\n            drawnItems.clearLayers();\n\n            // Refresh coordinate input field\n            $('#baseModal').find('#locationvalue').val(\"\");\n        });\n\n        mapper_modal.map.on('geosearch_showlocation', function (event)\n        {\n            var layer = event.Marker;\n            loadCoordinatesField(layer);\n            drawnItems.addLayer(layer);\n        });\n\n        mapper_modal.map.on('geosearch_error',function (event)\n        {\n            drawnItems.clearLayers();\n            $('#baseModal').find('#locationvalue').val(\"\");\n        });\n\n        /**\n         * GeoSearch control\n         * TODO: add to mapper_modal\n         */\n        var googleGeocodeProvider = new L.GeoSearch.Provider.Google();\n        var geoSearchControl = new L.Control.GeoSearch(\n        {\n            // provider: new L.GeoSearch.Provider.OpenStreetMap()\n            provider: googleGeocodeProvider,\n            position: 'topcenter',\n            showMarker: true,\n            retainZoomLevel: false,\n            draggable: false,\n            placeholder: translations.searchAddressPlaceholder,\n            //TODO: for other providerss too\n        });\n\n        mapper_modal.map.addControl(geoSearchControl);\n        $('#baseModal').find('#leaflet-control-geosearch-qry').attr('placeholder', translations.searchAddressPlaceholder );\n\n        }, 300);\n        // 300 because the fadeout effect of html dynamically loaded\n        // into the modal\n});\n\nfunction loadCoordinatesField(layer)\n{\n    // Create an object of coordinates\n    var coordinates = {\n        'poi_points': [],\n        'poi_shape': '',\n        'radius': null\n    };\n\n    // Fill the coordinates values\n    if (layer instanceof L.Rectangle)\n    {\n        $.each(layer.getLatLngs(), function(k,v)\n        {\n            coordinates.poi_points.push({\n                'latitude': parseFloat(v.lat).toFixed(7),\n                'longitude': parseFloat(v.lng).toFixed(7)\n            });\n        });\n        coordinates.poi_shape = 'rectangle';\n    }\n    else if (layer instanceof L.Polygon)\n    {\n        $.each(layer.getLatLngs(), function(k,v)\n        {\n            coordinates.poi_points.push({\n                'latitude': parseFloat(v.lat).toFixed(7),\n                'longitude': parseFloat(v.lng).toFixed(7)\n            });\n        });\n        coordinates.poi_shape = \"polygon\";\n    }\n    else if (layer instanceof L.Polyline)\n    {\n        $.each(layer.getLatLngs(), function(k,v)\n        {\n            coordinates.poi_points.push({\n                'latitude': parseFloat(v.lat).toFixed(7),\n                'longitude': parseFloat(v.lng).toFixed(7)\n            });\n        });\n        coordinates.poi_shape = \"polyline\";\n    }\n    else if (layer instanceof L.Circle)\n    {\n        coordinates.poi_points.push({\n            'latitude': parseFloat(layer.getLatLng().lat).toFixed(7),\n            'longitude': parseFloat(layer.getLatLng().lng).toFixed(7)\n        });\n        coordinates.radius = parseFloat(layer.getRadius()).toFixed(12);\n        coordinates.poi_shape = \"circle\";\n    }\n    else if (layer instanceof L.Marker)\n    {\n        coordinates.poi_points.push({\n            'latitude': parseFloat(layer.getLatLng().lat).toFixed(7),\n            'longitude': parseFloat(layer.getLatLng().lng).toFixed(7)\n        });\n        coordinates.poi_shape = \"marker\";\n    }\n    else\n    {\n        coordinates.poi_points.push({\n            'latitude': parseFloat(layer.getLatLng().lat).toFixed(7),\n            'longitude': parseFloat(layer.getLatLng().lng).toFixed(7)\n        });\n        coordinates.poi_shape = null;\n    }\n\n\n    $('#baseModal').find('#locationvalue').val(JSON.stringify(coordinates));\n    // console.log($('#baseModal').find('#locationvalue').val());\n\n}\n\nfunction createObject(poi)\n{\n    // console.log(poiType, coordinates, radius);\n    if(poi.poi_type == 'polygon' || poi.poi_type == 'rectangle')\n    {\n        var coordinates = [];\n        $.each(poi.poi_points, function (n, point) {\n            var coordinate = [point.latitude, point.longitude];\n            coordinates.push(coordinate);\n            // coordinates.push([parseFloat(point.latitude), parseFloat(point.longitude)]);\n        });\n\n        return new L.polygon(coordinates);\n    }\n\n\n    if(poi.poi_type == 'circle')\n    {\n        return new L.Circle(L.latLng([parseFloat(poi.poi_points[0].latitude), parseFloat(poi.poi_points[0].longitude)]), poi.radius);\n    }\n\n\n    if(poi.poi_type == 'marker')\n    {\n        return new L.Marker(L.latLng([parseFloat(poi.poi_points[0].latitude), parseFloat(poi.poi_points[0].longitude)]));\n    }\n}\n\nfunction getPoi(poi_id)\n{\n    var poi = false;\n\n    drawnPois.eachLayer(function (layer)\n    {\n        if(layer.key == poi_id)\n        {\n            poi = layer;\n        }\n    });\n    return poi;\n}\n"],"sourceRoot":"/source/"}