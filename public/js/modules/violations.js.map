{"version":3,"sources":["violations.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"violations.js","sourcesContent":["// var violation_mapper = undefined;\nvar requester = undefined;\n\n$(function () {\n    requester = app.requester.load();\n});\n\n$(document).delegate('.violation_notification_count > a', 'click', function(e) {\n    e.preventDefault();\n    $('.violation_notifications').html('');\n\n    requester.get('violationNotifications').then(\n        function(success) {\n            // console.log($('.violation_notifications').length);return false;\n            $('.violation_notifications').html(success.html);\n        },\n        function(fail) {\n            console.log('fail');\n        }\n    );\n});\n\n$(document).on('modal_form_loaded', function (e)\n{\n    setTimeout(function()\n    {\n        if($('.response_violation_data').val() != undefined)\n        {\n            opened_map = 'violation_map';\n            moveMap(opened_map);\n\n            var violationData = JSON.parse($('.response_violation_data').val());\n            var latLngs = [];\n            var trackedObjectRouteLatLngs = [];\n\n            /**\n             * Draw restriction area\n             * Sometimes area is deleted, but violation exists\n             */\n            if(violationData.isArea && violationData.area && violationData.area.area_points)\n            {\n                 $.each(violationData.area.area_points, function (n, point){\n                    var latLngPoint = [parseFloat(point.latitude), parseFloat(point.longitude)];\n                    latLngs.push(latLngPoint);\n                });\n\n                if (violationData.area.area_type == 'circle')\n                {\n                    mapper.drawCircle(latLngs, parseFloat(violationData.area.radius));\n                }\n                else\n                {\n                    mapper.drawPolygon(latLngs);\n                }\n            }\n\n            // Draw violation speed/area\n            if(violationData.trackedObjectPositions.length > 0)\n            {\n                $.each(violationData.trackedObjectPositions, function (n, point)\n                {\n                    // Create point objects\n                    var latLngPoint = [parseFloat(point.latitude), parseFloat(point.longitude)];\n\n                    // If speed is violated\n                    if (violationData.isSpeed && parseFloat(point.speed) > parseFloat(violationData.speed))\n                    {\n                        // Assign marker if speed is violated\n                        var marker = L.marker(latLngPoint,\n                            {\n                                icon: speed_violated\n                            })\n                        .addTo(mapper.map);\n                        mapper.featureGroup.addLayer(marker);\n                        marker.bindPopup($('#trans_allowed_speed').data('translation') + \": \" + violationData.speed + \"<br>\" + $('#trans_speed').data('translation') + \": \" + point.speed);\n                    }\n\n                    // If area is violated\n                    if(violationData.isArea)\n                    {\n                        trackedObjectRouteLatLngs.push(latLngPoint);\n                    }\n                });\n\n                // Add area violation line to map\n                mapper.drawPolyline(trackedObjectRouteLatLngs);\n            }\n\n            // Fit Bounds\n            if(mapper.featureGroup.getLayers().length != 0)\n            {\n                setTimeout(function (){\n                    mapper.map.fitBounds(\n                        mapper.featureGroup.getBounds(),\n                        {padding: [50, 50]}\n                    );\n                }, 100);\n            }\n        }\n        // console.log([$('#edit_map'),$('#create_map'),$('#violation_map'), opened_map]);\n    }, 300);\n});\n\n//# sourceMappingURL=global_show_violation.js.map\n"],"sourceRoot":"/source/"}